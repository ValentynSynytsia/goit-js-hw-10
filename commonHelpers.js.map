{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst daysTime = document.querySelector('[data-days]');\nconst hoursTime = document.querySelector('[data-hours]');\nconst minutesTime = document.querySelector('[data-minutes]');\nconst secondsTime = document.querySelector('[data-seconds]');\nconst input = document.querySelector('#datetime-picker');\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n  startTimer();\n});\n\nstartBtn.disabled = true;\n\nlet timeDifference;\nlet intervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr('#datetime-picker', options)\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  days.textContent = `${days}`;\n  hours.textContent = `${hours}`;\n  minutes.textContent = `${minutes}`;\n  seconds.textContent = `${seconds}`;\n}\n\nfunction startTimer() {\n  clearInterval(intervalId);\n  intervalId = setInterval(timer, 1000);\n}\n\nfunction timer() {\n  if (timeDifference > 1000) {\n    timeDifference -= 1000;\n    updateClockface(convertMs(timeDifference)); \n  } else {\n    clearInterval(intervalId);\n    input.disabled = false;\n  }\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["startBtn","input","startTimer","intervalId","options","selectedDates","flatpickr","timer"],"mappings":"wIAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EACrC,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAC3D,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EAEvDD,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAM,SAAW,GACjBC,GACF,CAAC,EAEDF,EAAS,SAAW,GAGpB,IAAIG,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAC,EAAU,mBAAoBF,CAAO,EASrC,SAASF,GAAa,CACpB,cAAcC,CAAU,EACxBA,EAAa,YAAYI,EAAO,GAAI,CACtC,CAEA,SAASA,GAAQ,CAKb,cAAcJ,CAAU,EACxBF,EAAM,SAAW,EAErB"}